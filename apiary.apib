FORMAT: 1A

# Easy Lawyer (EZL)

O Easy Lawyer é o software de gestão de logística jurídica que permite aos usuários acesso às solicitações via web. Tudo de forma mais rápida, segura e acessível e a qualquer tempo. Ele facilita o dia a dia de quem contrata e de quem é contratado, por meio de uma ferramenta que permite ao usuário ter acesso a uma plataforma de gestão e acompanhamento das solicitações.

Para mais informações sobre o sistema acesse nosso <a href="https://ezlawyer.atlassian.net/wiki/spaces/PUB/pages/101597/Manual+do+sistema">manual</a>.

O objetivo desta documentação é orientar o desenvolvedor sobre como integrar com a API do EZL, descrevendo as funcionalidades, os métodos a serem utilizados e listando informações a serem enviadas e recebidas. Para facilitar, são disponibilizados códigos prontos de exemplos em diversas linguagens de programação.

O mecanismo de integração com o EZL é simples, são necessários apenas conhecimentos intermediários em linguagem de programação para Web, requisições HTTP/HTTPS e manipulação de arquivos JSON.

Nesse manual você encontrará a referência sobre todas as operações disponíveis na API REST do EZL. Estas operações devem ser executadas utilizando sua chave específica (client_id e client_secret) nos respectivos endpoints.

# Group Fluxo de integração

![name](https://ezlawyer.atlassian.net/wiki/download/attachments/101576/image2018-10-17_15-2-14.png?version=1&modificationDate=1539799337477&cacheVersion=1&api=v2)

Para importar uma OS, primeiro devem ser importadas todas as suas dependências e as tabelas auxiliares.
A OS pertence à uma movimentação, que pertence a um processo que, por sua vez, pertence à uma pasta. Portanto, deve ser importada a pasta, o processo, a movimentação e, por último, a OS.

Quanto às tabelas auxiliares, elas também devem ser importadas de acordo com o nível de dependência. Por exemplo, para a importação da pasta é necessário que o cliente já tenha sido importado, uma vez que o cliente é um campo obrigatório na pasta.

# Status das transações

Conforme o andamento do serviço o status da OS é atualizado. Nessa tabela é possível verificar o andamento dos <a href="https://ezlawyer.atlassian.net/wiki/spaces/PUB/pages/101684/Dashboard#Dashboard-Tabeladetransi%C3%A7%C3%A3odosstatus">status</a>.

# Interpretrando status retornados pela API

| Retorno | Descrição                                                                                    |
| ------- | -------------------------------------------------------------------------------------------- |
| 201     |                                                                                              |
| 204     |                                                                                              |

# Glossário

Para se familiarizar com os termos jurídicos dessa API acesse o <a href="https://ezlawyer.atlassian.net/wiki/spaces/PUB/pages/39911425/Gloss+rio">glossário</a>.

# Group Autenticação

Informações necessárias para a autenticação da API.

## Obtendo o Token de autenticação [/oauth2/token/]

+ Attributes (array[Authentication])

### Gerando o Token [POST]

Para consumir os endpoints fornecidos pela API do EZLacert é necessário informar no cabeçalho de cada requisição o token obtido.

+ Request (application/json)

    + Attributes (array[Authentication])
        
    + Body
    
            {
                "grant_type": "client_credentials",
                "client_id": "<CLIENT_ID>",
                "client_secret": "<CLIENT_SECRET>"
            }
        
+ Response 200 (application/json)

    + Body
    
            {
                "access_token": "<TOKEN>",
                "expires_in": 36000,
                "token_type": "Bearer",
                "scope": "read write groups"
            }


# Group Comarcas

## Pesquisando comarcas disponíveis [/court_district/]
Buscar dados de comarcas cadastradas na base de dados

### Buscar comarcas [GET /court_ditrict/search={search}&name={name}&state={state}]
+ Parameters

    + search: mg - Busca nos campos de nome da comarca e iniciais do estado em que a comarca está localizada.
    + name: belo - Busca no campo de nome da comarca.
    + state: mg - Busca no campo das iniciais do estado em que a comarca está localizada.

+ Response 201 (application/json)

    + Headers
    
            Authorization: "Bearer <TOKEN>"
        
    + Body

            {
                "count": 4,
                "next": null,
                "previous": null,
                "results": [
                    {
                        "id": 895,
                        "name": "Belo Horizonte",
                        "state": 12
                    },
                    {
                        "id": 896,
                        "name": "Belo Vale",
                        "state": 12
                    },
                    {
                        "id": 924,
                        "name": "Campo Belo",
                        "state": 12
                    },
                    {
                        "id": 1049,
                        "name": "Monte Belo",
                        "state": 12
                    }
                ]
            }


# Group Instâncias

## Mantendo o cadastro de instâncias [/instance/]

+ Attributes (array[Instance])

### Criar uma instância [POST]
Cria uma instância e faz o seu vínculo no escritório da sessão de acordo com os dados informados.

+ Request (application/json)

    + Attributes (array[Instance])
    
    + Headers
            
            Authorization: "Bearer <TOKEN>"
    + Body
    
            {
                "name": "1 Instância Judicial"
            }

+ Response 201 (application/json)
    
    + Body
    
            {
                "id": 37,
                "name": "1 Instância Judicial",
                "legacy_code": null
            }

### Listando instâncias [GET /instance/{id}/]
Lista as instâncias cadastradas para o escritório da Sessão.
Caso seja informado o identificador, busca os dados de uma instância específica

+ Parameters

    + id: 37 (number, optional) - Identificador único da instância.

+ Response 201 (application/json)

    + Headers
    
            Authorization: "Bearer <TOKEN>"
        
    + Body
            
            {
                "count": 3,
                "next": null,
                "previous": null,
                "results": [
                    {
                        "id": 39,
                        "name": "3 Instância Judicial",
                        "legacy_code": null
                    },
                    {
                        "id": 38,
                        "name": "2 Instância Judicial",
                        "legacy_code": null
                    },
                    {
                        "id": 37,
                        "name": "1 Instância Judicial",
                        "legacy_code": null
                    }
                ]
            }

### Alterando instância [PUT /instance/{id}/]
Altera o cadastro de uma instância específica, de acordo com o id informado.

+ Parameters

    + id: 37 (number, required) - Identificador único da instância.
    
+ Request (application/json)
    
    + Headers
    
            Authorization: "Bearer <TOKEN>"

    + Body

            {
                "name": "01 Instância Judicial",
                "legacy_code": "codigo_legado"
            }
            

+ Response 201 (application/json)
    
    + Body
    
            {
                "id": 37,
                "name": "01 Instância Judicial",
                "legacy_code": "codigo_legado"
            }

### Apagando instância [DELETE /instance/{id}/]
Apaga a instância de acordo com o id informado.

+ Parameters

    + id: 40 (number, required) - Identificador único da instância.

+ Response 204 (application/json)
    + Headers
    
            Authorization: "Bearer <TOKEN>"

### Buscar instancias [GET /instance/search={search}&name={name}&legacy_code={legacy_code}]
Buscar dados de instâncias cadastradas na base de dados
+ Parameters

    + search: judicial - Busca nos campos de nome e legacy_code da instância.
    + name: judicial - Busca no campo de nome da instância.
    + `legacy_code`: codigo_legado - Busca no campo legacy_code da instância, pesquisa por valores exatos.

+ Response 201 (application/json)

    + Headers
    
            Authorization: "Bearer <TOKEN>"
        
    + Body
    
            {
                "count": 1,
                "next": null,
                "previous": null,
                "results": [
                    {
                        "id": 37,
                        "name": "01 Instância Judicial",
                        "legacy_code": "codigo_legado"
                    }
                ]
            }

# Group Órgãos

## Mantendo o cadastro de órgãos [/organ/]

+ Attributes (array[Organ])

### Criar um órgão [POST]
Cria um órgão e faz o seu vínculo no escritório da sessão de acordo com os dados informados.

+ Request (application/json)

    + Attributes (array[Organ])
    
    + Headers
            
            Authorization: "Bearer <TOKEN>"
    + Body
    
            {
                "legal_name": "Fórum de Belo Horizonte",
                "court_district": 895
            }

+ Response 201 (application/json)
    
    + Body
    
            {
                "id": 12193,
                "legal_name": "Fórum de Belo Horizonte 2",
                "name": null,
                "cpf_cnpj": null,
                "court_district": 895,
                "is_active": true,
                "legacy_code": null
            }

### Listando órgãos [GET /organ/{id}/]
Lista os órgãos cadastrados para o escritório da Sessão.
Caso seja informado o identificador, busca os dados de um órgão específico

+ Parameters

    + id: 12193 (number, optional) - Identificador único do órgão.

+ Response 201 (application/json)

    + Headers
    
            Authorization: "Bearer <TOKEN>"
        
    + Body
            
            {
                "count": 3,
                "next": null,
                "previous": null,
                "results": [
                    {
                        "id": 12193,
                        "legal_name": "Fórum de Belo Horizonte",
                        "name": null,
                        "cpf_cnpj": null,
                        "court_district": 895,
                        "is_active": true,
                        "legacy_code": null
                    },
                    {
                        "id": 12194,
                        "legal_name": "Fórum de Belo Horizonte 2",
                        "name": null,
                        "cpf_cnpj": null,
                        "court_district": 895,
                        "is_active": true,
                        "legacy_code": null
                    },
                    {
                        "id": 12192,
                        "legal_name": "Fórum de Contagem",
                        "name": null,
                        "cpf_cnpj": null,
                        "court_district": 952,
                        "is_active": true,
                        "legacy_code": null
                    }
                ]
            }

### Alterando órgão [PUT /organ/{id}/]
Altera o cadastro de um órgão específico, de acordo com o id informado.

+ Parameters

    + id: 12194 (number, required) - Identificador único do órgão.
    
+ Request (application/json)
    
    + Headers
    
            Authorization: "Bearer <TOKEN>"

    + Body

            {
                "legal_name": "Fórum de Belo Horizonte 200",
                "court_district": 895,
                "legacy_code": "codigo_legado"
            }
            

+ Response 201 (application/json)
    
    + Body
    
            {
                "id": 12194,
                "legal_name": "Fórum de Belo Horizonte 200",
                "name": null,
                "cpf_cnpj": null,
                "court_district": 895,
                "is_active": true,
                "legacy_code": "codigo_legado"
            }

### Apagando órgão [DELETE /organ/{id}/]
Apaga o órgão de acordo com o id informado.

+ Parameters

    + id: 12194 (number, required) - Identificador único do órgão.

+ Response 204 (application/json)
    + Headers
    
            Authorization: "Bearer <TOKEN>"

### Buscar órgão [GET /organ/search={search}]
Buscar dados de órgãos cadastrados na base de dados
+ Parameters

    + search: Belo Horizonte - Busca nos campos legal_name e legacy_code do órgão, ou pelas iniciais ou nome da comarca em que o órgão está vinculado.

+ Response 201 (application/json)

    + Headers
    
            Authorization: "Bearer <TOKEN>"
        
    + Body
    
            {
                "count": 1,
                "next": null,
                "previous": null,
                "results": [
                    {
                        "id": 37,
                        "name": "01 Instância Judicial",
                        "legacy_code": "codigo_legado"
                    }
                ]
            }

# Group Varas

## Mantendo o cadastro de varas [/court_division/]

+ Attributes (array[CourtDivision])

### Criar uma vara [POST]
Cria uma vara e faz o seu vínculo no escritório da sessão de acordo com os dados informados.

+ Request (application/json)

    + Attributes (array[CourtDivision])
    
    + Headers
            
            Authorization: "Bearer <TOKEN>"
    + Body
    
            {
                "name": "1ª VARA JUIZADO ESPECIAL CIVEL E CRIMINAL",
                "court_district": 895
            }

+ Response 201 (application/json)
    
    + Body
    
            {
                "id": 15679,
                "name": "1ª VARA JUIZADO ESPECIAL CIVEL E CRIMINAL",
                "legacy_code": null
            }

### Listando as varas [GET /court_division/{id}/]
Lista as varas cadastrados para o escritório da sessão.
Caso seja informado o identificador, busca os dados de uma vara específica

+ Parameters

    + id: 15681 (number, optional) - Identificador único do órgão.

+ Response 201 (application/json)

    + Headers
    
            Authorization: "Bearer <TOKEN>"
        
    + Body
            
            {
                "count": 3,
                "next": null,
                "previous": null,
                "results": [
                    {
                        "id": 15681,
                        "name": "8° ARQUIVO GERAL CÍVEL",
                        "legacy_code": null
                    },
                    {
                        "id": 15680,
                        "name": "SESSÃO ESPECIAL",
                        "legacy_code": null
                    },
                    {
                        "id": 15679,
                        "name": "1ª VARA JUIZADO ESPECIAL CIVEL E CRIMINAL",
                        "legacy_code": null
                    }
                ]
            }

### Alterando vara [PUT /court_division/{id}/]
Altera o cadastro de uma vara específica, de acordo com o id informado.

+ Parameters

    + id: 15681 (number, required) - Identificador único do órgão.
    
+ Request (application/json)
    
    + Headers
    
            Authorization: "Bearer <TOKEN>"

    + Body

            {
                "name": "8° ARQUIVO GERAL CÍVEL",
                "legacy_code": "codigo_legado"
            }
            

+ Response 201 (application/json)
    
    + Body
    
            {
                "id": 15681,
                "name": "8° ARQUIVO GERAL CÍVEL",
                "legacy_code": "codigo_legado"
            }

### Apagando vara [DELETE /court_division/{id}/]
Apaga a vara de acordo com o id informado.

+ Parameters

    + id: 15681 (number, required) - Identificador único da vara.

+ Response 204 (application/json)
    + Headers
    
            Authorization: "Bearer <TOKEN>"

### Buscar vara [GET /court_division/search={search}]
Buscar dados de varas cadastrados na base de dados.
+ Parameters

    + search: codigo_legado - Busca nos campos name e legacy_code da vara.

+ Response 201 (application/json)

    + Headers
    
            Authorization: "Bearer <TOKEN>"
        
    + Body
    
            {
                "count": 1,
                "next": null,
                "previous": null,
                "results": [
                    {
                        "id": 15682,
                        "name": "8° ARQUIVO GERAL CÍVEL",
                        "legacy_code": "codigo_legado"
                    }
                ]
            }

# Group Pessoas

## Mantendo o cadastro de pessoas [/person/]

+ Attributes (array[Person])

### Criar uma pessoa [POST]
Cria uma pessoa e faz o seu vínculo no escritório da sessão, de acordo com os dados informados.
    
+ Request (application/json)

    + Attributes (array[Person])
    
    + Headers
    
            Authorization: "Bearer <TOKEN>"

    + Body

            {
                "legal_name": "Alvo Dumbledore"
            }
            

+ Response 201 (application/json)
    
    + Body
    
            {
                "id": 11380,
                "name": null,
                "legal_name": "Alvo Dumbledore",
                "legal_type": "J",
                "cpf_cnpj": null,
                "is_lawyer": false,
                "is_customer": false,
                "is_supplier": false,
                "is_active": true,
                "legacy_code": null
            }

### Listando pessoas [GET /person/{id}/]
Lista as pessoas cadastradas para o escritório da Sessão.
Caso seja informado o identificador, busca os dados de uma pessoa específica

+ Parameters

    + id: 11380 (number, optional) - Identificador único da pessoa.

+ Response 201 (application/json)

    + Headers
    
            Authorization: "Bearer <TOKEN>"
        
    + Body

            {
                "count": 3,
                "next": null,
                "previous": null,
                "results": [
                    {
                        "id": 11380,
                        "name": null,
                        "legal_name": "Alvo Dumbledore",
                        "legal_type": "J",
                        "cpf_cnpj": null,
                        "is_lawyer": false,
                        "is_customer": false,
                        "is_supplier": false,
                        "is_active": true,
                        "legacy_code": null
                    },
                    {
                        "id": 11382,
                        "name": null,
                        "legal_name": "Arthur Dent",
                        "legal_type": "F",
                        "cpf_cnpj": "47704895010",
                        "is_lawyer": false,
                        "is_customer": false,
                        "is_supplier": false,
                        "is_active": true,
                        "legacy_code": null
                    },
                    {
                        "id": 11381,
                        "name": null,
                        "legal_name": "Severo Snape",
                        "legal_type": "F",
                        "cpf_cnpj": null,
                        "is_lawyer": false,
                        "is_customer": false,
                        "is_supplier": false,
                        "is_active": true,
                        "legacy_code": null
                    }
                ]
            }

### Alterando pessoas [PUT /person/{id}/]
Altera o cadastro de uma pessoa específica, de acordo com o id informado.

+ Parameters

    + id: 11381 (number, required) - Identificador único da pessoa.
    
+ Request (application/json)
    
    + Headers
    
            Authorization: "Bearer <TOKEN>"

    + Body

            {
                "legal_name": "Severo Snape",
                "is_lawyer": true
            }
            

+ Response 201 (application/json)
    
    + Body
    
            {
                "id": 11381,
                "name": null,
                "legal_name": "Severo Snape",
                "legal_type": "F",
                "cpf_cnpj": null,
                "is_lawyer": true,
                "is_customer": false,
                "is_supplier": false,
                "is_active": true,
                "legacy_code": null
            }

### Apagando pessoa [DELETE /person/{id}/]
Apaga a pessoa de acordo com o id informado.

+ Parameters

    + id: 11382 (number, required) - Identificador único da pessoa.

+ Response 204 (application/json)
    + Headers
    
            Authorization: "Bearer <TOKEN>" 

# Group Pastas

## Mantendo o cadastro de pastas [/folder/]

+ Attributes (array[Folder])

### Criar uma pasta [POST]
Cria uma pasta vinculada ao escritório da sessão de acordo com os dados informados

+ Request (application/json)
    
    + Headers
    
            Authorization: "Bearer <TOKEN>",
        
    + Body
        
            {
                "person_customer": 11384,
                "cost_center": null,
                "legacy_code": ""
            }
    
+ Response 201 (application/json)
    
    + Body
    
            {
                "id": 21237,
                "folder_number": 1,
                "person_customer": 11384,
                "cost_center": null,
                "legacy_code": ""
            }

### Listando pastas [GET /folder/{id}]
Listar Pastas cadastradas para o escritíorio da sessão. 
Caso seja informado um identificador será listado apenas a pasta selecionado.

+ Parameters

    + id: 1 (number, optional) - Identificador único da pasta.

+ Response 201 (application/json)
    + Headers
    
            Authorization: "Bearer <TOKEN>" 
        
    + Body
        
            {
                "count": 2,
                "next": null,
                "previous": null,
                "results": [
                    {
                        "id": 21238,
                        "folder_number": 2,
                        "person_customer": 11384,
                        "cost_center": null,
                        "legacy_code": ""
                    },
                    {
                        "id": 21237,
                        "folder_number": 1,
                        "person_customer": 11384,
                        "cost_center": null,
                        "legacy_code": ""
                    }
                ]
            }
        

### Alterando pasta [PUT /folder/{id}/]
Alterar a pasta de acordo com o ID informado

+ Parameters

    + id: 21238 (number, required) - Identificador único da pasta.

+ Request (application/json)
    
    + Headers
    
            Authorization: "Bearer <TOKEN>"

    + Body

            {
                "person_customer": 11384,
                "cost_center": null,
                "legacy_code": "Vogons01"
            }

+ Response 200 (application/json)
    + Headers
    
            Authorization: "Bearer <TOKEN>" 
        
    + Body
        
            {
                "id": 21238,
                "folder_number": 0,
                "person_customer": 11384,
                "cost_center": null,
                "legacy_code": "Vogons01"
            }

### Apagando pasta [DELETE /folder/{id}/]
Apaga a pasta de acordo com o Id informado.

+ Parameters

    + id: 1 (number, required) - Identificador único da pasta.

+ Response 204 (application/json)
    + Headers
    
            Authorization: "Bearer <TOKEN>" 

# Group Processos

## Mantendo o cadastro de processos [/lawsuit/]

+ Attributes (array[LawSuit])

### Criar um processo [POST]
Cria um processo no escritório da sessão

+ Request (application/json)
    
    + Headers
    
            Authorization: "Bearer <TOKEN>",
        
    + Body
        
            {
                "folder": 26945,
                "law_suit_number": "0000000-00.2018.0.00.0000"
            }

+ Response 201 (application/json)
    
    + Body
    
            {
                "id": 46459,
                "folder": 26945,
                "law_suit_number": "0000000-00.2018.0.00.0000",
                "opposing_party": null,
                "court_district": null,
                "instance": null,
                "organ": null,
                "court_division": null,
                "person_lawyer": null,
                "is_current_instance": false,
                "is_active": true,
                "legacy_code": null,
                "office_name": <Nome do Escritório da sessão>
            }

### Listando processos [GET /lawsuit/{id}]
Lista Processos cadastradas para o escritíorio da sessão. 
Caso seja informado um identificador será listado apenas o processo selecionado.

+ Parameters

    + id: 1 (number, optional) - Identificador único do processo.

+ Response 201 (application/json)
    + Headers
    
            Authorization: "Bearer <TOKEN>" 
        
    + Body
        
            {
                "count": 2,
                "next": null,
                "previous": null,
                "results": [
                    {
                        "id": 46460,
                        "folder": 26945,
                        "law_suit_number": "0000000-00.2018.0.00.0001",
                        "opposing_party": null,
                        "court_district": null,
                        "instance": null,
                        "organ": null,
                        "court_division": null,
                        "person_lawyer": null,
                        "is_current_instance": false,
                        "is_active": true,
                        "legacy_code": null,
                        "office_name": <Nome do Escritório da sessão>
                    },
                    {
                        "id": 46459,
                        "folder": 26945,
                        "law_suit_number": "0000000-00.2018.0.00.0000",
                        "opposing_party": null,
                        "court_district": null,
                        "instance": null,
                        "organ": null,
                        "court_division": null,
                        "person_lawyer": null,
                        "is_current_instance": false,
                        "is_active": true,
                        "legacy_code": null,
                        "office_name": <Nome do Escritório da sessão>
                    }
                ]
            }
        

### Alterando processo [PUT /lawsuit/{id}/]
Altera o processo de acordo com o ID informado

+ Parameters

    + id: 44460 (number, required) - Identificador único do processo.

+ Request (application/json)
    
    + Headers
    
            Authorization: "Bearer <TOKEN>"

    + Body

            {
                "folder": 26945,
                "law_suit_number": "0000000-00.2017.0.00.0001",
                "legacy_code": "codigo_legado"
            }


+ Response 200 (application/json)
    + Headers
    
            Authorization: "Bearer <TOKEN>" 
        
    + Body
        
            {
                "id": 46460,
                "folder": 26945,
                "law_suit_number": "0000000-00.2017.0.00.0001",
                "opposing_party": null,
                "court_district": null,
                "instance": null,
                "organ": null,
                "court_division": null,
                "person_lawyer": null,
                "is_current_instance": false,
                "is_active": true,
                "legacy_code": "codigo_legado",
                "office_name": "Tiago Gomes"
            }

### Apagando processo [DELETE /lawsuit/{id}/]
Apaga o processo de acordo com o Id informado.

+ Parameters

    + id: 46460 (number, required) - Identificador único do processo.

+ Response 204 (application/json)
    + Headers
    
            Authorization: "Bearer <TOKEN>" 

# Group Tipo de Movimentação

## Mantendo o cadastro de Tipos de Movmentação [/type_movement/]

+ Attributes (array[TypeMovement])

### Criar um tipo de movimentação [POST]
Cria uma vara e faz o seu vínculo no escritório da sessão de acordo com os dados informados.

+ Request (application/json)

    + Attributes (array[CourtDivision])
    
    + Headers
            
            Authorization: "Bearer <TOKEN>"
    + Body
    
            {
                "name": "OS Avaulsa"
            }

+ Response 201 (application/json)
    
    + Body
    
            {
                "id": 9123,
                "name": "Os Avulsa",
                "legacy_code": null
            }

### Listando os Tipos de Movimentação [GET /type_movement/{id}/]
Lista os tipos de movimentação cadastrados para o escritório da sessão.
Caso seja informado o identificador, busca os dados de um tipo de movimentação específico

+ Parameters

    + id: 9123 (number, optional) - Identificador único do tipo de movimentação.

+ Response 201 (application/json)

    + Headers
    
            Authorization: "Bearer <TOKEN>"
        
    + Body
            
            {
                "count": 3,
                "next": null,
                "previous": null,
                "results": [
                    {
                        "id": 9125,
                        "name": "Arquivar",
                        "legacy_code": null
                    },
                    {
                        "id": 9124,
                        "name": "Abrir Pasta",
                        "legacy_code": null
                    },
                    {
                        "id": 9123,
                        "name": "OS Avulsa",
                        "legacy_code": null
                    }
                ]
            }

### Alterando Tipo de Movimentação [PUT /type_movement/{id}/]
Altera o cadastro de um tipo de movimentação específico, de acordo com o id informado.

+ Parameters

    + id: 9125 (number, required) - Identificador único do tipo de movimentação.
    
+ Request (application/json)
    
    + Headers
    
            Authorization: "Bearer <TOKEN>"

    + Body

            {
                "name": "Arquivar e Finalizar",
                "legacy_code": "codigo_legado"
            }
            

+ Response 201 (application/json)
    
    + Body
    
            {
                "id": 9125,
                "name": "Arquivar e Finalizar",
                "legacy_code": "codigo_legado"
            }

### Apagando tipo de movimentação [DELETE /type_movement/{id}/]
Apaga o tipo de movimentaçao de acordo com o id informado.

+ Parameters

    + id: 9125 (number, required) - Identificador único do tipo de movimentação.

+ Response 204 (application/json)
    + Headers
    
            Authorization: "Bearer <TOKEN>"

### Buscar tipo de movimentaçao [GET /court_division/search={search}]
Buscar dados de tipos de movimentaçao cadastrados para o escritório da sessão.
+ Parameters

    + search: `Os Avulsa` - Busca nos campos name e legacy_code do tipo de movimentação.

+ Response 201 (application/json)

    + Headers
    
            Authorization: "Bearer <TOKEN>"
        
    + Body
    
            {
                "count": 1,
                "next": null,
                "previous": null,
                "results": [
                    {
                        "id": 9123,
                        "name": "OS Avulsa",
                        "legacy_code": null
                    }
                ]
            }

# Group Movimentação

## Mantendo o cadastro de Movmentação [/movement/]

+ Attributes (array[Movement])

### Criar uma movimentação [POST]
Cria uma movimentação e faz o seu vínculo no escritório da sessão de acordo com os dados informados.

+ Request (application/json)

    + Attributes (array[Movement])
    
    + Headers
            
            Authorization: "Bearer <TOKEN>"
    + Body
    
            {
                "type_movement": 9123,
                "folder": 26945
            }

+ Response 201 (application/json)
    
    + Body
    
            {
                "id": 36282,
                "type_movement": 9123,
                "law_suit": 46459,
                "folder": 26945,
                "legacy_code": null
            }

### Listando as Movimentações [GET /movement/{id}/]
Lista as movimentações cadastrados para o escritório da sessão.
Caso seja informado o identificador, busca os dados de uma movimentação específica

+ Parameters

    + id: 36282 (number, optional) - Identificador único da movimentação.

+ Response 201 (application/json)

    + Headers
    
            Authorization: "Bearer <TOKEN>"
        
    + Body
            
            {
                "count": 2,
                "next": null,
                "previous": null,
                "results": [
                    {
                        "id": 36283,
                        "type_movement": 9124,
                        "law_suit": 46459,
                        "folder": 26945,
                        "legacy_code": null
                    },
                    {
                        "id": 36282,
                        "type_movement": 9123,
                        "law_suit": 46459,
                        "folder": 26945,
                        "legacy_code": null
                    }
                ]
            }

### Alterando Movimentação [PUT /movement/{id}/]
Altera o cadastro de uma movimentação específica, de acordo com o id informado.

+ Parameters

    + id: 36282 (number, required) - Identificador único da movimentação.
    
+ Request (application/json)
    
    + Headers
    
            Authorization: "Bearer <TOKEN>"

    + Body

            {
                "type_movement": 9123,
                "folder": 26945,
                "law_suit": 46459,
                "legacy_code": "codigo_legado"
            }
            

+ Response 201 (application/json)
    
    + Body
    
            {
                "id": 36282,
                "type_movement": 9123,
                "law_suit": 46459,
                "folder": 26945,
                "legacy_code": "codigo_legado"
            }

### Apagando movimentação [DELETE /movement/{id}/]
Apaga a movimentaçao de acordo com o id informado.

+ Parameters

    + id: 36283 (number, required) - Identificador único da movimentação.

+ Response 204 (application/json)
    + Headers
    
            Authorization: "Bearer <TOKEN>"

### Buscar movimentaçao [GET /movement/search={search}&legacy_code={legacy_code}&law_suit_number={law_suit_number}&type_movement_legacy_code={type_movement_legacy_code}]
Buscar dados de movimentaçao cadastrados para o escritório da sessão.
+ Parameters

    + search: `Os Avulsa` - Busca nos campos nome e legacy_code do tipo de movimentação, e nos campos legacy_code e law_suit_number do processo.
    + `legacy_code`: codigo_legado - Busca no campo legacy_code da movimentação, pesquisa por valores exatos.
    + law_suit_number: `0000000-00.2018.0.00.0000` - Busca no campo de número do processo vinculado à movimentação. Busca por valores exatos.
    + `type_movement_legacy_code`: `codigo_legado` - Filtra com base no identificador do sistema de origem do processo vinculado à movimentação. Busca por valores exatos.
    

+ Response 201 (application/json)

    + Headers
    
            Authorization: "Bearer <TOKEN>"
        
    + Body
    
            {
                "count": 1,
                "next": null,
                "previous": null,
                "results": [
                    {
                        "id": 36282,
                        "type_movement": 9123,
                        "law_suit": null,
                        "folder": 26945,
                        "legacy_code": "codigo_legado"
                    }
                ]
            }

# Group Tipo de Serviços Principais

## Pesquisando tipos de serviços principais disponíveis [/type_task_main/]
Buscar dados de tipos de serviços principais cadastrados na base de dados

### Buscar tipos de serviços principais [GET /type_task_main/search={search}&name={name}&is_hearing={is_hearing}]
+ Parameters

    + search: audiência - Busca no campo de nome do tipo de serviço principal.
    + name: civel - Filtra pelo campo de nome do tipo de serviço principal. Filtra por valores desconsiderando os acentos.
    + `is_hearing`: true (boolean) - Filtra pelo campo is_hearing do tio de serviço principal.

+ Response 201 (application/json)

    + Headers
    
            Authorization: "Bearer <TOKEN>"
        
    + Body

            {
                "count": 3,
                "next": null,
                "previous": null,
                "results": [
                    {
                        "id": 3,
                        "name": "Audiência cível - advogado e preposto",
                        "is_hearing": true
                    },
                    {
                        "id": 1,
                        "name": "Audiência cível - apenas advogado",
                        "is_hearing": true
                    },
                    {
                        "id": 2,
                        "name": "Audiência cível - apenas preposto",
                        "is_hearing": true
                    }
                ]
            }


# Group Tipo de Serviço

## Mantendo o cadastro de Tipo de Serviço [/type_task/]

+ Attributes (array[TypeTask])

### Criar um tipo de serviço [POST]
Cria um tipo de serviço e faz o seu vínculo no escritório da sessão de acordo com os dados informados.

+ Request (application/json)

    + Attributes (array[TypeTask])
    
    + Headers
            
            Authorization: "Bearer <TOKEN>"
    + Body
    
            {
                "name": "Outros tipo de Serviços",
                "type_task_main": [17]
            }

+ Response 201 (application/json)
    
    + Body
    
            {
                "id": 3766,
                "name": "Outros tipo de Serviços",
                "type_task_main": [
                    17
                ]
            }

### Listando os tipos de serviço [GET /type_task/{id}/]
Lista os tipos de serviço cadastrados para o escritório da sessão.
Caso seja informado o identificador, busca os dados de um tipo de serviço específico.

+ Parameters

    + id: 3766 (number, optional) - Identificador único do tipo de serviço.

+ Response 201 (application/json)

    + Headers
    
            Authorization: "Bearer <TOKEN>"
        
    + Body
            
            {
                "count": 3,
                "next": null,
                "previous": null,
                "results": [
                    {
                        "id": 3747,
                        "name": "Alvará",
                        "type_task_main": [
                            13
                        ]
                    },
                    {
                        "id": 3748,
                        "name": "Audiência cível - advogado e preposto",
                        "type_task_main": [
                            3
                        ]
                    },
                    {
                        "id": 3765,
                        "name": "Tipo de Serviço Teste",
                        "type_task_main": [
                            13,
                            1
                        ]
                    }
                ]
            }

### Alterando tipo de serviço [PUT /type_task/{id}/]
Altera o cadastro de um tipo de serviço específico, de acordo com o id informado.

+ Parameters

    + id: 3765 (number, required) - Identificador único do tipo de serviço.
    
+ Request (application/json)
    
    + Headers
    
            Authorization: "Bearer <TOKEN>"

    + Body 
    
            {
                "name": "Outros tipo de Serviços",
                "type_task_main": [17]
            }
            

+ Response 201 (application/json)
    
    + Body
    
            {
                "id": 3765,
                "name": "Outros tipo de Serviços",
                "type_task_main": [
                    17
                ]
            }

### Apagando tipo de serviço [DELETE /type_task/{id}/]
Apaga o tipo de serviço de acordo com o id informado.

+ Parameters

    + id: 3765 (number, required) - Identificador único do tipo de serviço.

+ Response 204 (application/json)
    + Headers
    
            Authorization: "Bearer <TOKEN>"

### Buscar tipo de serviço [GET /type_task/search={search}]
Buscar dados de tipos de serviço cadastrados para o escritório da sessão.
+ Parameters

    + search: `cível` - Busca nos campos nome e legacy_code do tipo de serviço.

+ Response 201 (application/json)

    + Headers
    
            Authorization: "Bearer <TOKEN>"
        
    + Body
    
            {
                "count": 3,
                "next": null,
                "previous": null,
                "results": [
                    {
                        "id": 3748,
                        "name": "Audiência cível - advogado e preposto",
                        "type_task_main": [
                            3
                        ]
                    },
                    {
                        "id": 3749,
                        "name": "Audiência cível - apenas advogado",
                        "type_task_main": [
                            1
                        ]
                    },
                    {
                        "id": 3750,
                        "name": "Audiência cível - apenas preposto",
                        "type_task_main": [
                            2
                        ]
                    }
                ]
            }

# Group Ordem de serviço

## Mantendo o cadastro de Ordens de Serviço [/task/]

+ Attributes (array[TaskRead])

### Criar uma ordem de serviço [POST]
Cria uma ordem de serviço e faz o seu vínculo no escritório da sessão de acordo com os dados informados.

Só é possível importar OS nos seguintes status: *Solicitada* ou *Aceita pelo Service*.

+ Request (application/json)

    + Attributes (array[TaskCreate])
    
    + Headers
            
            Authorization: "Bearer <TOKEN>"
    + Body
    
            {
                "final_deadline_date": "2018-10-30T12:30:00",
                "performance_place": "Belo Horizonte",
                "movement": 36284,
                "type_task": 3747,
                "description": "Descrição do serviço",
                "task_status": "Solicitada",
                "legacy_code": "codigo_legado"
            }

+ Response 201 (application/json)
    
    + Body
    
            {
                "final_deadline_date": "2018-10-30T12:30:00-03:00",
                "performance_place": "Belo Horizonte",
                "movement": 36284,
                "type_task": 3747,
                "description": "Descrição do serviço",
                "task_status": "Solicitada",
                "legacy_code": "codigo_legado",
                "requested_date": "2018-10-17T15:07:18.612316-03:00"
            }

### Listando as ordens de serviço [GET /task/{id}/]
Lista as ordens de serviço cadastradas para o escritório da sessão.
Caso seja informado o identificador, busca os dados de uma ordem de serviço específica.

+ Parameters

    + id: 65063 (number, optional) - Identificador único da ordem de serviço.

+ Response 201 (application/json)

    + Headers
    
            Authorization: "Bearer <TOKEN>"
        
    + Body
            
            {
                "count": 1,
                "next": null,
                "previous": null,
                "results": [
                    {
                        "id": 65063,
                        "legacy_code": "codigo_legado_5",
                        "is_active": true,
                        "task_hash": "b8e5b567-f388-4c52-8a6e-37277ce0ed7c",
                        "task_number": 6,
                        "delegation_date": null,
                        "acceptance_date": null,
                        "final_deadline_date": "2018-11-17T15:30:00-02:00",
                        "execution_date": null,
                        "requested_date": "2018-10-17T15:18:44.266486-03:00",
                        "acceptance_service_date": null,
                        "refused_service_date": null,
                        "return_date": null,
                        "refused_date": null,
                        "blocked_payment_date": null,
                        "finished_date": null,
                        "description": "Descrição do serviço Contagem",
                        "task_status": "Solicitada",
                        "amount": "0.00",
                        "billing_date": null,
                        "receipt_date": null,
                        "performance_place": "Ibirité",
                        "alter_user": null,
                        "parent": null,
                        "movement": 36284,
                        "person_executed_by": null,
                        "person_distributed_by": null,
                        "type_task": 3747
                    }
                ]
            }

### Alterando ordem de servico [PATCH /task/{id}/]
Altera o cadastro de uma ordem de serviço específica, de acordo com o id informado.

+ Parameters

    + id: 65063 (number, required) - Identificador único da ordem de serviço.
    
+ Request (application/json)
    
    + Headers
    
            Authorization: "Bearer <TOKEN>"

    + Body 
    
            {
                "acceptance_service_date": "2018-11-17T15:35:00"
            }
            

+ Response 201 (application/json)
    
    + Body
    
            {
                "id": 65063,
                "legacy_code": "codigo_legado_5",
                "is_active": true,
                "task_hash": "b8e5b567-f388-4c52-8a6e-37277ce0ed7c",
                "task_number": 6,
                "delegation_date": null,
                "acceptance_date": null,
                "final_deadline_date": "2018-11-17T15:30:00-02:00",
                "execution_date": null,
                "requested_date": "2018-10-17T15:18:44.266486-03:00",
                "acceptance_service_date": "2018-11-17T15:35:00-02:00",
                "refused_service_date": null,
                "return_date": null,
                "refused_date": null,
                "blocked_payment_date": null,
                "finished_date": null,
                "description": "Descrição do serviço Contagem",
                "task_status": "Solicitada",
                "amount": "0.00",
                "billing_date": null,
                "receipt_date": null,
                "performance_place": "Ibirité",
                "alter_user": null,
                "parent": null,
                "movement": 36284,
                "person_executed_by": null,
                "person_distributed_by": null,
                "type_task": 3747
            }

### Apagando ordem de serviço [DELETE /task/{id}/]
Apaga a ordem de serviço de acordo com o id informado.

+ Parameters

    + id: 65063 (number, required) - Identificador único da ordem de serviço.

+ Response 204 (application/json)
    + Headers
    
            Authorization: "Bearer <TOKEN>"

### Buscar ordem de serviço [GET /task/legacy_code={legacy_code}&task_number={task_number}]
Buscar dados de ordens de serviço cadastradas para o escritório da sessão.
+ Parameters

    + `legacy_code`: `codigo_legado` - filtra os registros pelo campo legacy_code da ordem de serviço.
    + `task_number`: 1 - filtra os registros pelo campo task_number da ordem de serviço.

+ Response 201 (application/json)

    + Headers
    
            Authorization: "Bearer <TOKEN>"
        
    + Body
    
            {
                "count": 1,
                "next": null,
                "previous": null,
                "results": [
                    {
                        "id": 65058,
                        "legacy_code": "codigo_legado",
                        "is_active": true,
                        "task_hash": "02831d1e-0bf0-4ac2-8c7e-c5bc92020044",
                        "task_number": 1,
                        "delegation_date": null,
                        "acceptance_date": null,
                        "final_deadline_date": "2018-10-30T12:30:00-03:00",
                        "execution_date": null,
                        "requested_date": "2018-10-17T15:00:48.528417-03:00",
                        "acceptance_service_date": null,
                        "refused_service_date": null,
                        "return_date": null,
                        "refused_date": null,
                        "blocked_payment_date": null,
                        "finished_date": null,
                        "description": "Descrição do serviço",
                        "task_status": "Solicitada",
                        "amount": "0.00",
                        "billing_date": null,
                        "receipt_date": null,
                        "performance_place": "Belo Horizonte",
                        "alter_user": null,
                        "parent": null,
                        "movement": 36284,
                        "person_executed_by": null,
                        "person_distributed_by": null,
                        "type_task": 3747
                    }
                ]
            }

# Group Tabelas de Preço

## Mantendo o cadastro de tabelas de preço [/service_price_table/]

+ Attributes (array[ServicePriceTable])

### Criar uma tabela de preço [POST]
Cria uma tabela de preço e faz o seu vínculo no escritório da sessão de acordo com os dados informados.

+ Request (application/json)

    + Attributes (array[ServicePriceTable])
    
    + Headers
            
            Authorization: "Bearer <TOKEN>"
    + Body
    
            {
                "office_correspondent": 266
            }

+ Response 201 (application/json)
    
    + Body
    
            {
                "id": 35586,
                "legacy_code": null,
                "is_active": true,
                "value": "0.00",
                "office_correspondent": 226,
                "type_task": null,
                "court_district": null,
                "state": null,
                "client": null,
                "court_district_complement": null
            }

### Listando as tabelas de preço [GET /service_price_table/{id}/]
Lista as tabelas de preço cadastrados para o escritório da sessão.
Caso seja informado o identificador, busca os dados de uma tabela de preço específica.

+ Parameters

    + id: 35587 (number, optional) - Identificador único da tabela de preço.

+ Response 201 (application/json)

    + Headers
    
            Authorization: "Bearer <TOKEN>"
        
    + Body
            
            {
                "count": 3,
                "next": null,
                "previous": null,
                "results": [
                    {
                        "id": 35587,
                        "legacy_code": null,
                        "is_active": true,
                        "value": "12.15",
                        "office_correspondent": 226,
                        "type_task": null,
                        "court_district": 895,
                        "state": 12,
                        "client": null,
                        "court_district_complement": null
                    },
                    {
                        "id": 35586,
                        "legacy_code": null,
                        "is_active": true,
                        "value": "0.00",
                        "office_correspondent": 226,
                        "type_task": null,
                        "court_district": 895,
                        "state": null,
                        "client": null,
                        "court_district_complement": null
                    },
                    {
                        "id": 35585,
                        "legacy_code": null,
                        "is_active": true,
                        "value": "0.00",
                        "office_correspondent": 226,
                        "type_task": null,
                        "court_district": null,
                        "state": null,
                        "client": null,
                        "court_district_complement": null
                    }
                ]
            }

### Alterando tabela de preço [PUT /service_price_table/{id}/]
Altera o cadastro de uma tabela de preço específica, de acordo com o id informado.

+ Parameters

    + id: 35587 (number, required) - Identificador único do tipo de serviço.
    
+ Request (application/json)
    
    + Headers
    
            Authorization: "Bearer <TOKEN>"

    + Body 
    
            {
                "office_correspondent": 226,
                "court_district": 895,
                "state": 12,
                "value": "12.50"
            }
            

+ Response 201 (application/json)
    
    + Body
    
            {
                "id": 35587,
                "legacy_code": null,
                "is_active": true,
                "value": "12.50",
                "office_correspondent": 226,
                "type_task": null,
                "court_district": 895,
                "state": 12,
                "client": null,
                "court_district_complement": null
            }

### Apagando tabela de preço [DELETE /service_price_table/{id}/]
Apaga a tabela de preço de acordo com o id informado.

+ Parameters

    + id: 35587 (number, required) - Identificador único da tabela de preço.

+ Response 204 (application/json)
    + Headers
    
            Authorization: "Bearer <TOKEN>"

# Group Centro de custos

## Mantendo o cadastro de centros de custos [/cost_center/]

+ Attributes (array[CostCenter])

### Criar um centro de custos [POST]
Cria um centro de custos e faz o seu vínculo no escritório da sessão de acordo com os dados informados.

+ Request (application/json)

    + Attributes (array[CostCenter])
    
    + Headers
            
            Authorization: "Bearer <TOKEN>"
    + Body
    
            {
                "name": "Centro de custo"
            }

+ Response 201 (application/json)
    
    + Body
    
            {
                "id": 112778,
                "legacy_code": null,
                "is_active": true,
                "name": "Centro de custo"
            }

### Listando os centros de custos [GET /cost_center/{id}/]
Lista os centros de custos cadastrados para o escritório da sessão.
Caso seja informado o identificador, busca os dados de um centro de custo específico.

+ Parameters

    + id: 112778 (number, optional) - Identificador único do centro de custos.

+ Response 201 (application/json)

    + Headers
    
            Authorization: "Bearer <TOKEN>"
        
    + Body
            
            {
                "count": 3,
                "next": null,
                "previous": null,
                "results": [
                    {
                        "id": 112778,
                        "legacy_code": null,
                        "is_active": true,
                        "name": "Centro de custo"
                    },
                    {
                        "id": 112779,
                        "legacy_code": null,
                        "is_active": true,
                        "name": "Centro de custo 2"
                    },
                    {
                        "id": 112780,
                        "legacy_code": null,
                        "is_active": true,
                        "name": "Centro de custo 3"
                    }
                ]
            }

### Alterando centro de custos [PUT /cost_center/{id}/]
Altera o cadastro de um centro de custos específico, de acordo com o id informado.

+ Parameters

    + id: 112778 (number, required) - Identificador único do centro de custos.
    
+ Request (application/json)
    
    + Headers
    
            Authorization: "Bearer <TOKEN>"

    + Body 
    
            {
                "name": 226,
                "legacy_code": "codigo_legado"
            }
            

+ Response 201 (application/json)
    
    + Body
    
            {
                "id": 112778,
                "legacy_code": "codigo_legado",
                "is_active": true,
                "name": "Centro de custo"
            }

### Apagando centro de custos [DELETE /cost_center/{id}/]
Apaga o centro de custos de acordo com o id informado.

+ Parameters

    + id: 112780 (number, required) - Identificador único do centro de custos.

+ Response 204 (application/json)
    + Headers
    
            Authorization: "Bearer <TOKEN>"

## Data Structures

### Authentication
+ grant_type: client_credentials (required) - Fixo: client_credentials.
+ client_id: <CLIENT_ID> (required) - Informar o client_id fornecido.
+ client_secret: <CLIENT_SECRET> (required) - Informar o client_secret fornecido.

### Person
+ legal_name: Alvo Dumbledore (required) - Nome da Pessoa ou Razão social
+ name: Alvos Dumbledore - Nome da pessoa ou Nome Fantasia
+ cpf_cnpj: 00000000000 - CPF ou CNPJ (devem ser válidos, caso seja enviado)
+ legal_type: F, J (array, required) - Tipo da pessoa

    + Padrão: J
        
+ is_lawyer: false (boolean) - Esta opção define se a pessoa é um advogado
+ is_costumer: false (boolean) - Esta opção define se a pessoa é um cliente
+ is_supplier: false (boolean) - Esta opção define se a pessoa é um fornecedor
+ is_active: true (boolean) - Esta opção define se a pessoa está ativa

### Folder
+ person_customer: `11384` (number, required) - Identificador do cliente cadastrado no escritório que será vinculado à pasta
+ cost_center: `15` (number) - Identificador do centro de custo
+ legacy_code: `123456` (string) - Identificador da pasta no sistema legado

### LawSuit
+ folder: 26945 (number, required) - Id da pasta a ser vinculada com o processo
+ law_suit_number: `0000000-00.2018.0.00.0000` (string, required) - Número do processo
+ court_district: 895 (number, required) - Id da comarca a ser vinculada com o processo
+ instance: 38 (number, required) - Id da instância a ser vinculada com o processo
+ person_lawyer: 12232 (number) - Identificador do advogado cadastrado no escritório que será vinculado ao processo
+ organ: 12229 (number) - Identificador do órgão cadastrado no escritório que será vinculado ao processo
+ court_division: 16398 (number) - Identificador da vara cadastrada no escritório que será vinculada ao processo
+ is_current_instance: false (boolean)
+ opposing_party: 'parte_adversa' (string) - Especificação da parte adversa do processo
+ legacy_code: `123456` (string) - Identificador do processo no sistema legado

### Instance
+ name: `1 Instância Judicial` (string, required) - Nome da Instância
+ legacy_code: `123456` (string) - Identificador da instância no sistema legado

### Organ
+ legal_name: Fórum Belo Horizonte (required) - Nome do Órgão
+ name: Fórum Belo Horizonte - Nome ou Nome Fantasia do Órgão
+ cpf_cnpj: 00000000000 - CPF ou CNPJ (devem ser válidos, caso seja enviado)
+ court_district: 895 (number, required) - Id da comarca a ser vinculada com o orgão
+ legacy_code: `123456` (string) - Identificador do órgão no sistema legado

### CourtDivision
+ name: Vara Juizado Especial Civel e Criminal (required) - Nome da Vara
+ legacy_code: `123456` (string) - Identificador da vara no sistema legado

### TypeMovement
+ name: OS Avulsa (required) - Nome do Tipo de Movimentação
+ legacy_code: `123456` (string) - Identificador da vara no sistema legado

### Movement
+ type_movement: 9123 (number, required) - Identificador do Tipo de Movimentação
+ folder: 26945 (number, required) - Identificador da Pasta
+ law_suit: 0 (number, required) - Identificador da do Processo
+ legacy_code: `123456` (string) - Identificador da movimentação no sistema legado

### TypeTaskMain
+ is_hearing: true (boolean) - Identifica se o tipo de serviço principal corresponde a uma audiência
+ name: `Audiência Cível` (string) - Nome do tipo de serviço principal

### TypeTask
+ name: Alvará (required) - Nome do Tipo de Serviço
+ type_task_main: [13] (array, required) - Lista com tipos de serviços principais
+ legacy_code: `123456` (string) - Identificador da vara no sistema legado

### TaskRead
+ final_deadline_date: `2015-05-05T12:30:00` (string, required) - Prazo fatal no formato date/time (ISO8601) de cumprimento da OS
+ performance_place: `Belo Horizonte` (string, required) - Local de cumprimento da OS
+ movement: 36284 (number, required) - Identificador da movimentação a qual a OS será vinculada
+ type_task: 3747 (number, required) - Identificador do tipo de serviço vinculado à OS
+ description: `Descrição do serviço` (string) - Descrição do serviço a ser realizado
+ task_status: Solicitada, Aceita pelo Service, Em Aberto, A Cumprir, Cumprida, Retorno, Finalizada, Recusada pelo Service, Recusada, Glosada (enum) - Status da OS
    + Padrão: Solicitada
+ `legacy_code`: `codigo_legado` (string) - Identificador da Os no sistema legado
+ delegation_date: `2018-10-15T14:26:29.291870-03:00` (string) - Data de delegação no formato date/time (ISO8601)
+ acceptance_date: `2018-10-15T14:31:17.030168-03:00` (string) - Data de aceite pelo correspondente no formato date/time (ISO8601)
+ execution_date:  `2018-10-16T14:13:00-03:00` (string) - Data de cumprimento no formato date/time (ISO8601)
+ requested_date: `2018-10-15T14:15:46.506425-03:00` (string) - Data de solicitação no formato date/time (ISO8601)
+ acceptance_service_date: `2018-10-15T14:26:18.855924-03:00" (string) - Data de aceite pelo service no formato date/time (ISO8601)
+ refused_service_date: `` (string) - Data de recusa pelo service no formato date/time (ISO8601)
+ return_date: `2018-10-15T14:31:39.472339-03:00` (string) - Data de retorno no formato date/time (ISO8601)
+ refused_date: `` (string) - Data de recusa pelo correspondente no formato date/time (ISO8601)
+ blocked_payment_date: `` (string) - Data de glosa no formato date/time (ISO8601)
+ finished_date: `` (string) - Data de finalização da OS no formato date/time (ISO8601)
+ amount: `100.01` (string) - Valor gasto com a Ordem de Serviço
+ parent: 0 (number) - Identificador da Ordem de Serviço a qual a ordem de serviço atual está vinculada
+ person_executed_by: 0 (number) - Identificador do correspondente responsável pela execução da ordem de serviço
+ person_distributed_by: 0 (number) - Identificador do service responsável pela contratação da ordem de serviço
+ task_number: 7 (number) - Número sequêncial para as OSs do escritório,
+ is_active: true (boolean) - Identificador de status Ativo/Inativo da OS
+ task_hash: `bca5cd69-6db3-49f8-a622-6e43b18126d4` (string) - Hash único da OS

### TaskCreate
+ final_deadline_date: `2015-05-05T12:30:00` (string, required) - Prazo fatal no formato date/time (ISO8601) de cumprimento da OS
+ performance_place: `Belo Horizonte` (string, required) - Local de cumprimento da OS
+ movement: 36284 (number, required) - Identificador da movimentação a qual a OS será vinculada
+ type_task: 3747 (number, required) - Identificador do tipo de serviço vinculado à OS
+ description: `Descrição do serviço` (string) - Descrição do serviço a ser realizado
+ task_status: Solicitada, Aceita pelo Service (enum) - Status da OS
    + Padrão: Solicitada
+ `legacy_code`: `codigo_legado` (string) - Identificador da Os no sistema legado
+ requested_date: "2018-10-15T14:15:46.506425-03:00" (string) - Data de solicitação no formato date/time (ISO8601)

### ServicePriceTable
+ `office_correspondent`: 266 (number, required) - Identificador do escritório correspondente
+ `type_task`: 0 (number, optional) - Identificador do tipo de serviço
+ `court_district`: 0 (number, optional) - Identificador da comarca
+ `court_district_complement`: 0 (number, optional) - Identificador do complemento da comarca
+ `state`: 0 (number, optional) - Identificador do estado
+ `client`: 0 (number, optional) - Identificador do cliente
+ `value`: `0.00` (string, optional) - Valor no formato decimal
+ `legacy_code`: `codigo_legado` (string, optional) - Identificador da tabela de preços no sistema de origem
+ is_active: true (boolean) - Identificador de status Ativo/Inativo da OS

### CostCenter
+ name: Centro de custos (required) - Nome do centro de custos
+ `legacy_code`: codigo_legado (string) - Identificador do centro de custos no sistema de origem
+ is_active: true (boolean) - Identificador de status Ativo/Inativo do centro de custos